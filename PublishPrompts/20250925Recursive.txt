1. Recursive Joint Simulation in Games https://arxiv.org/html/2402.08128v1
2. A Curry-Howard Correspondence for Linear, Reversible Computation https://arxiv.org/pdf/2302.11887v2
3. Similarity-based Cooperation https://arxiv.org/abs/2211.14468v1
4. A program for the full axiom of choice https://arxiv.org/pdf/2006.05433v4
Can you help me write the initial section of the Agda, Rocq (formerly Coq) and Lean4 formalizations of these papers, with unifications and isomorphisms between the contents of these papers? Of course it can be too big for a single response, but just give me something that will parse, at least with placeholders like `admit` and `sorry` if the thing is too big to fit within the context window, but also provide a copiable infobox that summarizes the content and the APIs so that it can be used to formalize further parts by copying into other chats, from now until completion, although you do not need a complete roadmap now. In addition to copying literally the contents of these papers, this also requests synthesis. Can you please formalize the theory of real closed fields to represent quantities like utilities, probabilities and norms, and give formal isomorphisms and reductions between the similarity-based and recursive joint simulation-based folk theorems, using Curry-Howard correspondences as a method, not just a formalization target? Can you please formalize the Curry-Howard correspondences for linear reversible computation and for the axiom of choice by defining the logics and the computational procedures in a generic and parameterizable way, with oracles and bases as generic type variables? In addition, can you formalize the application of Curry-Howard correspondences to the case of folk theorems from similarity-based cooperation and recursive joint simulation to inter-convert between agents as programs and agents as types, and write a text-based argument for AI alignment as AI design, showing that they are the same thing, because programs are proofs are types?