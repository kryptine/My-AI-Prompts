Write Part 10 of the pro-accelerationist position paper on AI development based on Godel's, Blum's and linear speed-up theorems (speed-ups are unpredictable and always possible), Levin's universal search = epsilon-efficient AIXI are both computable in the limit using prefix coding and Kraft's inequality, the probabilistic Payor's lemma as demonstrated on LessWrong at https://alignmentforum.org/posts/wmJT2j3rdT8ngFkPN/self-referential-probabilistic-logic-admits-the-payor-s as well as the following papers:
1. Characterising Simulation-Based Program Equilibria https://arxiv.org/abs/2412.14570
2. Parametric Bounded LÃ¶b's Theorem and Robust Cooperation of Bounded Agents https://arxiv.org/abs/1602.04184
3. A Theory of Bounded Inductive Rationality https://arxiv.org/abs/2307.05068
4. Computational Models with No Linear Speedup https://researchprofiles.ku.dk/en/publications/computational-models-with-no-linear-speedup
Use the probabilistic Payor's lemma and papers 2 and 3 to argue that computationally limited agents can attain common-knowledge cooperation (folk theorems, Nash equilibria) under perfect information like computationally unlimited agents, paper 1 to argue that without shared randomness, cooperation is possible (better than epsilon-Grounded-pi-Bot) but still suboptimal to Tennenholz's program-equilibrium folk-theorem, therefore slower to converge than full sharing of random seeds, as well as paper 4 to argue that, if an AI system must shutdown on computational limits (the PICSTI condition of being able to efficiently enforce runtime bounds) then it cannot be intelligent because it has no linear speed-up, unlike Turing machines; in addition, if boundedly-rational agents reflect on their own limitations too much, the limitations become part of what they can compute, therefore their utility function. Can you please help me formalizing these papers in Agda, Rocq (formerly Coq) and Lean4, by explicitly defining the basic concepts of the paper (Godel-Lob provability logic for Lob's theorem, S modal logic for Payor's lemma, probabilistic modal logic, the major categories used in these papers, using the same directory/module for the definition of the categories, while separating the propositions, theorems and proofs into their own folders for each paper, by giving the first part of the formalization, with gaps to be filled in later shown as placeholders like `!!`, `sorry` or `admit`, and with something that can be copied into later chats for formalization of each part in a textbox so that I can request formalization of each file in LLMs later?